version: 2
jobs:
  build-go:
    docker:
      - image: circleci/golang:latest
    working_directory: /go/src/github.com/pivotalservices/ignition
    steps:
      - checkout
      - run: |
          go test ./... -covermode=atomic -coverprofile=coverage.txt
      - run: |
          GOOS=linux GOARCH=amd64 go build -o /tmp/output/ignition github.com/pivotalservices/ignition/cmd/ignition
      - persist_to_workspace:
          root: /tmp/output
          paths:
            - ignition
  build-node:
    docker:
      - image: circleci/node:8
    working_directory: ~/ignition
    steps:
      - checkout

      - restore_cache:
          keys:
          - dependencies-{{ checksum "web/package.json" }}
          - dependencies-

      - run:
          working_directory: web
          command: |
            yarn install

      - save_cache:
          paths:
            - web/node_modules
          key: dependencies-{{ checksum "web/package.json" }}
      - run:
          working_directory: web
          command: yarn ci
      - persist_to_workspace:
          root: ~/ignition/web/dist
          paths:
            - index.html
            - assets/*
  package:
    docker:
      - image: circleci/golang:latest
    working_directory: ~/ignition
    steps:
      - attach_workspace:
          at: ~/ignition
      - run:
          command: |
            cd ..
            tar -czf ignition.tar.gz ignition
      - store_artifacts:
          path: ~/ignition.tar.gz
          destination: ignition.tar.gz
      - persist_to_workspace:
          root: ~/
          paths:
            - ignition.tar.gz

  release:
    docker:
      - image: circleci/golang:latest
    working_directory: /go/src/github.com/pivotalservices/ignition
    steps:
      - checkout
      - attach_workspace:
          at: ~/ignition
      - run: |
          go install github.com/tcnksm/ghr@latest
          ghr -t $GITHUB_TOKEN -u $GITHUB_USERNAME -r ignition $CIRCLE_TAG ~/ignition/ignition.tar.gz

  deploy:
    docker:
      - image: circleci/golang:latest
    working_directory: /go/src/github.com/pivotalservices/ignition
    steps:
      - checkout
      - attach_workspace:
          at: ~/ignition
      - run:
          working_directory: ~/
          command: |
            curl -L "https://packages.cloudfoundry.org/stable?release=linux64-binary&source=github" | tar -zx
            chmod u+x ./cf
      - run:
          working_directory: ~/ignition
          command: |
            echo 'ignition.tar.gz' > .cfignore
            # ./../cf login -a $CF_STAGING_API -u $CF_STAGING_USERNAME -p "$CF_STAGING_PASSWORD" -o $CF_STAGING_ORG -s $CF_STAGING_SPACE
            # ./../cf push ignition -f /go/src/github.com/pivotalservices/ignition/manifests/ignition.yml
            # ./../cf push ignition-google -f /go/src/github.com/pivotalservices/ignition/manifests/ignition-google.yml
            ./../cf login -a $CF_PROD_API -u $CF_PROD_USERNAME -p "$CF_PROD_PASSWORD" -o $CF_PROD_ORG -s $CF_PROD_SPACE
            ./../cf push ignition -f /go/src/github.com/pivotalservices/ignition/manifests/ignition.yml
workflows:
  version: 2

  ci:
    jobs:
      - build-go
      - build-node
      - package:
          requires:
            - build-go
            - build-node

  ship-it:
    jobs:
      - build-go:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - build-node:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - package:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
          requires:
            - build-go
            - build-node
      - release:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
          requires:
            - package
      - deploy:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
          requires:
            - package
